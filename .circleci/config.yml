version: 2.1
executors:
  my-executor:
    # https://circleci.com/docs/2.0/circleci-images/
    docker:
      - image: circleci/node:10.16.1
      - image: circleci/python:3.6.5
        environment:
          PIPENV_VENV_IN_PROJECT: true
    working_directory: ~/sample

commands:
  restore:
    steps:
      - restore_cache:
          key: sample-v1-{{ .Branch }}-{{ checksum "package.json" }}
      - restore_cache:
          key: sample-v1-{{ .Branch }}-{{ checksum "Pipfile.lock" }}

  save:
    steps:
      - save_cache:
          paths:
            - "node_modules"
          key: sample-v1-{{ .Branch }}-{{ checksum "package.json" }}
      - save_cache:
          paths:
            - ".venv"
          key: sample-v1-{{ .Branch }}-{{ checksum "Pipfile.lock" }}

jobs:
  setup:
    executor: my-executor
    steps:
      - checkout
      - restore
      - run:
          name: install
          command: |
            sudo pip install pipenv
            pipenv install
            npm install
      - save

  build:
    executor: my-executor
    parameters:
      env:
        type: enum
        enum: ["prod", "dev"]
    steps:
      - checkout
      - restore
      - run:
          name: build
          command: |
            source .venv/bin/activate

            aws --version
            npm --version
            node --version
            npm run cdkversion

            echo << parameters.env >>

            npm run build

            npm run cdksynth

  deploy:
    executor: my-executor
    parameters:
      env:
        type: enum
        enum: ["prod", "dev"]
    steps:
      - checkout
      - restore
      - run:
          name: deploy
          command: |
            source .venv/bin/activate

            aws --version
            npm --version
            node --version
            npm run cdkversion

            echo << parameters.env >>

            npm run cdkdeploy

workflows:
  version: 2.1
  release-dev-workflow:
    jobs:
      - setup:
          filters:
            branches:
              only:
                - master
                - /^issues\/\d+$/

      - build:
          env: dev
          requires:
            - setup
          filters:
            branches:
              only:
                - master
                - /^issues\/\d+$/

      - deploy:
          env: dev
          requires:
            - build
          filters:
            branches:
              only:
                - master
                - /^issues\/\d+$/

  release-prod-workflow:
    jobs:
      - setup:
          filters:
            branches:
              ignore: /.*/
            tags:
              only:
                - /^v\d+\.\d+\.\d+$/

      - build:
          env: prod
          requires:
            - setup
          filters:
            branches:
              ignore: /.*/
            tags:
              only:
                - /^v\d+\.\d+\.\d+$/

      - deploy:
          env: prod
          requires:
            - build
          filters:
            branches:
              ignore: /.*/
            tags:
              only:
                - /^v\d+\.\d+\.\d+$/
